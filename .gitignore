# ─────────────────────────────
# Core Node / Monorepo-ish
# ─────────────────────────────
node_modules/
bower_components/
jspm_packages/
web_modules/
.pnp.*
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.yarn-integrity

# Logs & diagnostics
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime PIDs
pids
*.pid
*.seed
*.pid.lock

# Coverage / instrumentation
coverage
*.lcov
.nyc_output
lib-cov

# Caches (tooling)
.cache
.parcel-cache
.docusaurus
.temp
.eslintcache
.stylelintcache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# TypeScript
*.tsbuildinfo

# Pack output
*.tgz

# Environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Lockfiles — keep pnpm’s lockfile committed (library-friendly), ignore others
# package-lock.json
# yarn.lock

# Editors / IDE
.vscode/
.idea/
.vscode-test
*.iml

# OS cruft
.DS_Store
Thumbs.db

# ─────────────────────────────
# Project-specific build output
# ─────────────────────────────
# Generated binaries & glue
build/
dist/

# Keep Emscripten cache stamps out of the tree (if build/ isn’t ignored elsewhere)
build/.stamps/
*.stamp.json

# Playwright / Vitest browser artifacts
playwright-report/
test-results/

# Bench outputs
benchmark-*
benchmark-*.json

# Misc local helpers
source_code.md
