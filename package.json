{
  "name": "@dekzer/kissfft",
  "version": "0.1.0",
  "description": "WebAssembly-compiled KISS FFT library with TypeScript bindings",
  "keywords": [
    "fft",
    "webassembly",
    "dsp",
    "signal processing",
    "kissfft"
  ],
  "license": "SEE LICENSE IN LICENSE",
  "homepage": "https://github.com/dekzer-oss/kissfft#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dekzer-oss/kissfft.git"
  },
  "bugs": {
    "url": "https://github.com/dekzer-oss/kissfft/issues"
  },
  "type": "module",
  "sideEffects": false,
  "engines": {
    "node": ">=18.17"
  },
  "publishConfig": {
    "access": "public"
  },
  "files": [
    "dist/*.js",
    "dist/*.d.ts",
    "dist/*.map",
    "dist/*.wasm",
    "build/web/*.{js,wasm}",
    "build/node/*.{js,wasm}",
    "LICENSE",
    "NOTICE",
    "THIRD_PARTY_LICENSES/**"
  ],
  "main": "./dist/kissfft.node.esm.js",
  "module": "./dist/kissfft.esm.js",
  "types": "./dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "browser": "./dist/kissfft.browser.esm.js",
      "node": "./dist/kissfft.node.esm.js",
      "import": "./dist/kissfft.esm.js",
      "default": "./dist/kissfft.esm.js"
    },
    "./browser": {
      "types": "./dist/kissfft.browser.d.ts",
      "default": "./dist/kissfft.browser.esm.js"
    },
    "./node": {
      "types": "./dist/kissfft.node.d.ts",
      "default": "./dist/kissfft.node.esm.js"
    },
    "./preload": {
      "types": "./dist/kissfft.preload.d.ts",
      "default": "./dist/kissfft.preload.esm.js"
    }
  },
  "typesVersions": {
    "*": {
      "browser": [
        "dist/kissfft.browser.d.ts"
      ],
      "node": [
        "dist/kissfft.node.d.ts"
      ],
      "preload": [
        "dist/kissfft.preload.d.ts"
      ]
    }
  },
  "unpkg": "dist/kissfft.umd.js",
  "jsdelivr": "dist/kissfft.umd.js",
  "scripts": {
    "clean": "rimraf dist build",
    "build:wasm:perf": "node emcripten/build.mjs --both --env=both --profile=perf",
    "build:wasm:size": "node emcripten/build.mjs --both --env=both --profile=size",
    "build:wasm:both": "node emcripten/build.mjs --both --env=both",
    "prebuild": "pnpm run build:wasm:perf",
    "build": "vite build -c vite.index.config.ts && vite build -c vite.es.config.ts && vite build -c vite.node.config.ts && vite build -c vite.umd.config.ts && (node -e \"const fs=require('fs');const f=['dist/index.d.ts','dist/kissfft.browser.d.ts','dist/kissfft.node.d.ts','dist/kissfft.preload.d.ts'];if(process.env.FORCE_TYPES==='1'){process.exit(1)}process.exit(f.every(p=>fs.existsSync(p))?0:1)\" || rollup -c rollup.types.config.mjs) && rimraf dist/types",
    "test": "vitest run --reporter=verbose",
    "test:node": "vitest run --project=node",
    "test:browser": "vitest run --project=browser",
    "bench": "vitest bench",
    "lint": "eslint .",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "prepublishOnly": "pnpm run clean && FORCE_TYPES=1 pnpm run build && pnpm run test",
    "e2e:open": "playwright test -c playwright.config.ts --ui",
    "e2e:browsers": "playwright install --with-deps",
    "preview:e2e": "vite preview --host 127.0.0.1 --strictPort --port 4178",
    "test:e2e": "pnpm run build && playwright test -c playwright.config.ts",
    "test:cov": "vitest run --coverage",
    "ci:unit": "vitest run --coverage --reporter=dot"
  },
  "devDependencies": {
    "@playwright/test": "^1.55.0",
    "@types/node": "^24.0.15",
    "@vitest/browser": "^3.2.4",
    "@vitest/coverage-v8": "3.2.4",
    "eslint": "^9.31.0",
    "prettier": "^4.0.0-alpha.12",
    "rimraf": "^6.0.1",
    "rollup": "^4.52.0",
    "rollup-plugin-copy": "^3.5.0",
    "rollup-plugin-dts": "^6.2.1",
    "rollup-plugin-tsconfig-paths": "^1.5.2",
    "sirv-cli": "^3.0.1",
    "typescript": "^5.8.3",
    "vite": "7.1.5",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.2.4"
  }
}
